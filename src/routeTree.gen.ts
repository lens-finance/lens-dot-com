/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PricingIndexImport } from './routes/pricing/index'
import { Route as FeaturesIndexImport } from './routes/features/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as ExampleChatImport } from './routes/example.chat'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PricingIndexRoute = PricingIndexImport.update({
  id: '/pricing/',
  path: '/pricing/',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesIndexRoute = FeaturesIndexImport.update({
  id: '/features/',
  path: '/features/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const ExampleChatRoute = ExampleChatImport.update({
  id: '/example/chat',
  path: '/example/chat',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/example/chat': {
      id: '/example/chat'
      path: '/example/chat'
      fullPath: '/example/chat'
      preLoaderRoute: typeof ExampleChatImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/features/': {
      id: '/features/'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof FeaturesIndexImport
      parentRoute: typeof rootRoute
    }
    '/pricing/': {
      id: '/pricing/'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/example/chat': typeof ExampleChatRoute
  '/about': typeof AboutIndexRoute
  '/features': typeof FeaturesIndexRoute
  '/pricing': typeof PricingIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/example/chat': typeof ExampleChatRoute
  '/about': typeof AboutIndexRoute
  '/features': typeof FeaturesIndexRoute
  '/pricing': typeof PricingIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/example/chat': typeof ExampleChatRoute
  '/about/': typeof AboutIndexRoute
  '/features/': typeof FeaturesIndexRoute
  '/pricing/': typeof PricingIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/example/chat' | '/about' | '/features' | '/pricing'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/example/chat' | '/about' | '/features' | '/pricing'
  id:
    | '__root__'
    | '/'
    | '/example/chat'
    | '/about/'
    | '/features/'
    | '/pricing/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExampleChatRoute: typeof ExampleChatRoute
  AboutIndexRoute: typeof AboutIndexRoute
  FeaturesIndexRoute: typeof FeaturesIndexRoute
  PricingIndexRoute: typeof PricingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExampleChatRoute: ExampleChatRoute,
  AboutIndexRoute: AboutIndexRoute,
  FeaturesIndexRoute: FeaturesIndexRoute,
  PricingIndexRoute: PricingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/example/chat",
        "/about/",
        "/features/",
        "/pricing/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/example/chat": {
      "filePath": "example.chat.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/features/": {
      "filePath": "features/index.tsx"
    },
    "/pricing/": {
      "filePath": "pricing/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
